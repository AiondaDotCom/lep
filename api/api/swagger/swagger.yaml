swagger: "2.0"
info:
  version: "0.0.1"
  title: Aionda LEP
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - multipart/form-data
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
    #
    # User management related things
    # /user/login
    # /user/requestRegistration
    # /user/modify
    # /user/delete
    # /user/resetPassword
    # /user/getLoginLog
    #
  /user/login:
    x-swagger-router-controller: login
    get:
      description: Endpoint used to obtain a JSON Webtoken from the server. This token is used to authenicate the user for subsequent requestes
      operationId: login
      parameters:
        - name: name
          in: query
          description: Username (emailadress is used to identify the useraccount)
          required: true
          type: string
        - name: password
          in: query
          description: Password corresponding to username
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
              - jwt
              - userName
              - expireTimestamp
              - accountType
            properties:
              jwt:
                type: string
              userName:
                type: string
              expireTimestamp:
                type: number
              accountType:
                type: string
              lastLogin:
                type: string
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /user/requestRegistration:
    x-swagger-router-controller: login
    get:
      description: Request the registration of a new account. It is checked, whether the emailadress is in an allowed set of domains. A registration link (with token) is sent to that adress.
      operationId: requestRegistration
      parameters:
        - name: email
          in: query
          description: emailadress
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/register:
    x-swagger-router-controller: login
    get:
      description: Create a new account. It is checked, if the username is in an allowed set of domains
      operationId: register
      parameters:
        - name: token
          in: query
          required: true
          type: string
        - name: email
          in: query
          required: true
          type: string
        - name: password
          in: query
          required: true
          type: string
        - name: fullName
          in: query
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/delete:
    x-swagger-router-controller: login
    get:
      description: Delete account. Authorization via email and password
      operationId: deleteAccount
      parameters:
        - name: name
          in: query
          description: username
          required: true
          type: string
        - name: password
          in: query
          description: Password
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/modify:
    x-swagger-router-controller: login
    get:
      description: Modify account (change password, etc.)
      operationId: modifyAccount
      parameters:
        - name: name
          in: query
          description: username
          required: true
          type: string
        - name: password
          in: query
          description: Password
          required: true
          type: string
        - name: newpassword
          in: query
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/requestPasswordReset:
    x-swagger-router-controller: login
    get:
      description: |
        If the user has forgotten the password, he can reset it.
        This can be done by sending a password-reset-link to the  emailadress identifying the account.
        The link contains a token that allows the user to enter a new password, which is then saved via the /user/resetPassword endpoint.
      operationId: requestPasswordReset
      parameters:
        - name: email
          in: query
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/getLoginLog:
    x-swagger-router-controller: login
    get:
      description: |
        Returns the login history for the account the token was issued for (Determined via the payload.username property).
        The returned list is limeted to 50 items to prevent too much data.
      operationId: getLoginLog
      parameters:
        - name: token
          in: query
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              required:
                - error
                - timestamp
              properties:
                error:
                  type: boolean
                timestamp:
                  type: string
                description:
                  type: string
                ip:
                  type: string
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /user/renewToken:
    x-swagger-router-controller: login
    get:
      description: |
        Returns a token with a new expireTimestamp. The token contains a maximumExpireTimestamp, which defines the date until which renewing the token is allowed
      operationId: renewToken
      parameters:
        - name: token
          in: query
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
              - newToken
              - newExpireTimestamp
            properties:
              newToken:
                type: string
              newExpireTimestamp:
                type: number
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /restricted:
    x-swagger-router-controller: restricted
    get:
      description: |
        Endpoint used to test the json webtoken authentication.
      operationId: restricted
      parameters:
        - name: jwt
          in: query
          description: JSON Web token
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /admin/getConfig:
    x-swagger-router-controller: admin
    get:
      description: |
        Returns the configuration (environment variables,...)
      operationId: getConfig
      parameters:
        - name: token
          in: query
          description: JSON Web token
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /admin/getAccountList:
    x-swagger-router-controller: admin
    get:
      description: |
        Returns list of registered accounts and corresponding metadata
      operationId: getAccountList
      parameters:
        - name: token
          in: query
          description: JSON Web token
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getDomainWhitelist:
    x-swagger-router-controller: misc
    get:
      description: |
        Returns the current active domain-whitelist that is used to determine wether a mailadress is allowed, or not.
      operationId: getDomainWhitelist
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /whatIsMyIP:
    x-swagger-router-controller: misc
    get:
      description: |
        Returns the IP, that the request was issued from
      operationId: whatIsMyIP
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /doc/download:
    x-swagger-router-controller: document
    get:
      description: |
        Allows user to download specific files
      operationId: downloadDocument
      parameters:
        - name: token
          in: query
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /doc/upload:
    x-swagger-router-controller: document
    post:
      description: |
        Allows user to upload specific files
      operationId: uploadDocument
      parameters:
        - name: token
          in: query
          required: true
          type: string
        - name: file
          in: formData
          description: file to upload
          required: true
          type: file
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/MessageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  MessageResponse:
    required:
      - message
    properties:
      message:
        type: string
  UnauthorizedResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
