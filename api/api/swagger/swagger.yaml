swagger: "2.0"
info:
  version: "0.0.1"
  title: Aionda LEP
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - multipart/form-data
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
    #
    # User management related things
    # /user/login
    # /user/requestRegistration
    # /user/modify
    # /user/delete
    # /user/resetPassword
    # /user/getLoginLog
    #
  /user/login:
    x-swagger-router-controller: login
    get:
      description: Endpoint used to obtain a JSON Webtoken from the server. This token is used to authenicate the user for subsequent requestes
      # used as the method name of the controller
      operationId: login
      parameters:
        - name: name
          in: query
          description: Username
          required: true
          type: string
        - name: password
          in: query
          description: Password corresponding to username
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - jwt
            properties:
              jwt:
                type: string
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/requestRegistration:
    x-swagger-router-controller: login
    get:
      description: Create a new account. It is checked, if the username is in an allowed set of domains
      operationId: requestRegistration
      parameters:
        - name: email
          in: query
          description: emailadress
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/register:
    x-swagger-router-controller: login
    get:
      description: Create a new account. It is checked, if the username is in an allowed set of domains
      operationId: register
      parameters:
        - name: token
          in: query
          required: true
          type: string
        - name: email
          in: query
          required: true
          type: string
        - name: password
          in: query
          required: true
          type: string
        - name: fullName
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/delete:
    x-swagger-router-controller: login
    get:
      description: Delete account
      operationId: deleteAccount
      parameters:
        - name: name
          in: query
          description: username
          required: true
          type: string
        - name: password
          in: query
          description: Password
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/modify:
    x-swagger-router-controller: login
    get:
      description: Modify account (change password, etc.)
      operationId: modifyAccount
      parameters:
        - name: name
          in: query
          description: username
          required: true
          type: string
        - name: password
          in: query
          description: Password
          required: true
          type: string
        - name: newpassword
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/resetPassword:
    x-swagger-router-controller: login
    get:
      description: Reset password
      operationId: resetPassword
      parameters:
        - name: email
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/getLoginLog:
    x-swagger-router-controller: login
    get:
      description: Get login log
      operationId: getLoginLog
      parameters:
        - name: token
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /restricted:
    x-swagger-router-controller: restricted
    get:
      description: Endpoint used to test the jwt authentication
      # used as the method name of the controller
      operationId: restricted
      parameters:
        - name: jwt
          in: query
          description: JSON Web token
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /admin/getConfig:
    x-swagger-router-controller: admin
    get:
      description: Returns the configuration (environment variables,...)
      # used as the method name of the controller
      operationId: getConfig
      parameters:
        - name: token
          in: query
          description: JSON Web token
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /doc/download:
    x-swagger-router-controller: document
    get:
      description: Allows user to download specific files
      # used as the method name of the controller
      operationId: downloadDocument
      parameters:
        - name: token
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /doc/upload:
    x-swagger-router-controller: document
    post:
      description: Allows user to download specific files
      # used as the method name of the controller
      operationId: uploadDocument
      parameters:
        - name: token
          in: query
          required: true
          type: string
        - name: file
          in: formData
          description: file to upload
          required: true
          type: file
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
